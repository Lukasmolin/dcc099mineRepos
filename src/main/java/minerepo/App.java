/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package minerepo;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.google.common.base.Predicate;

import minerepo.analisys.AnalisysScript;
import minerepo.analisys.IndividualScript;
import minerepo.git.GitCommit;
import minerepo.logger.TextLogger;
import minerepo.runtime.CLIExecution;

public class App {

    private static TextLogger log = new TextLogger("//home//lucas//Desktop//RepositoriosMinerados", "log");

    public static TextLogger getLog(){
        return log;
    }

    public static void main(String[] args){
        try {
            log.log("Script Started!");
            Predicate<GitCommit> filterFunc = commit -> {
                String msg = commit.getMsg().toLowerCase();
                return msg.contains("bug") || msg.contains("fix");
            };
            List<String> urls = new ArrayList<>();
            urls.add("https://github.com/mongodb/mongo-cxx-driver");


            var script = new AnalisysScript(urls, "//home//lucas//Desktop//RepositoriosMinerados", 1);
            script.addFilter(filterFunc);
            new Thread(new Runnable(){
            
                @Override
                public void run() {
                    System.out.println("MONITORAMENTO ATIVADO...\n");
                    long time = System.currentTimeMillis() / 1000;
                    while(script.scriptsRunning() + script.scriptsWaiting() > 0)
                    {
                        if(time + 8 < System.currentTimeMillis() / 1000){
                            time = System.currentTimeMillis() / 1000;
                            String out = "";
                            out += "Ativos: " + script.scriptsRunning();
                            out += "  Espera: " + script.scriptsWaiting();
                            out += "\n";
                            IndividualScript[] scripts = script.getRunningScripts();
                            for(var s : scripts){
                                if(s != null){
                                    var repo = s.getRepo();
                                    if(repo != null){
                                        out += "| "+repo.getName();
                                    } else {                                        
                                        out += "| "+s.getOriginUrl();
                                    }
                                    out += " : "+s.getStatus().toString()+ " |";
                                }
                            }
                            
                            System.out.println(out);
                        }

                    }
                    
                }
            }).start();

            script.run();
            
        } catch (Exception ex){
            System.out.println("OPA!OPA!OPA!");
            ex.printStackTrace();
        }
        
    }

}
